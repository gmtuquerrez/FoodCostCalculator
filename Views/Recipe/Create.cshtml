@model FoodCostCalculator.Models.Recipe
@{
    ViewData["Title"] = "Configuración de la receta";
    var items = ViewBag.Items as List<FoodCostCalculator.Models.Item>;
}

<h2 class="mb-3 text-start">Configuración de la receta</h2>

<form asp-action="Create" method="post">
    <!-- Nombre del producto/receta -->
    <div class="mb-3 row">
        <label class="col-form-label col-md-2">Producto/Receta:</label>
        <div class="col-md-6">
            <input asp-for="FinalProduct" class="form-control" placeholder="Nombre del producto" />
        </div>
        <label class="col-form-label col-md-1">Porciones:</label>
        <div class="col-md-1">
            <input asp-for="Portions" type="number" class="form-control" step="0.01" />
        </div>
        <label class="col-form-label col-md-1">Unidad:</label>
        <div class="col-md-1">
            <select class="form-select">
                <option value="Porcion">Porción</option>
                <option value="Kg">Kg</option>
                <option value="Litro">Litro</option>
            </select>
        </div>
    </div>

    <!-- Ingredientes -->
    <div class="d-flex justify-content-between align-items-center mt-4 mb-2">
        <h3>Ingredientes</h3>
        <button type="button" class="btn btn-secondary btn-sm" onclick="addIngredient()">Agregar</button>
    </div>

    <div id="ingredients-list">
        <!-- Ingredientes se agregarán dinámicamente -->
    </div>

    <!-- Botones guardar y cancelar -->
    <div class="d-flex justify-content-end mt-4">
        <button type="submit" class="btn btn-primary me-2">Guardar</button>
        <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
    </div>
</form>

<!-- Scripts -->
<script>
    var items = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(items));

    function addIngredient() {
        var container = document.getElementById('ingredients-list');
        var index = container.children.length;

        var html = `
            <div class="mb-2 d-flex align-items-center" id="ingredient-${index}">
                <!-- Item select -->
                <select name="ingredients[${index}].ItemId" class="form-select me-2" style="width: 200px;">
                    ${items.map(i => `<option value="${i.Id}" data-unit="${i.ConsumptionUnit}">${i.Name}</option>`).join('')}
                </select>

                <!-- Quantity input -->
                <input type="number" step="0.00000001" min="0"
                       name="ingredients[${index}].Quantity"
                       class="form-control me-2"
                       style="width: 120px;"
                       placeholder="Ej: 0.00015678"/>

                <!-- Unit display -->
                <input type="text" class="form-control me-2" style="width: 80px;"
                       value="${items[0]?.ConsumptionUnit || ''}" readonly />

                <!-- Channels multi-select -->
                <select name="ingredients[${index}].SalesChannels"
                        class="selectpicker me-2"
                        multiple
                        data-live-search="true"
                        title="Seleccionar Canales"
                        style="width: 200px;">
                    <option value="DineIn">Dine In</option>
                    <option value="Delivery">Delivery</option>
                    <option value="Takeaway">Takeaway</option>
                </select>

                <!-- Delete button -->
                <button type="button" class="btn btn-danger btn-sm" onclick="removeIngredient(${index})">Eliminar</button>
            </div>
        `;

        container.insertAdjacentHTML('beforeend', html);
        $('.selectpicker').selectpicker('refresh');

        // Actualizar unidad al cambiar item
        var itemSelect = document.querySelector(`#ingredient-${index} select[name='ingredients[${index}].ItemId']`);
        var unitInput = document.querySelector(`#ingredient-${index} input[readonly]`);
        itemSelect.addEventListener('change', function() {
            var selected = itemSelect.selectedOptions[0];
            unitInput.value = selected.getAttribute('data-unit');
        });
    }

    function removeIngredient(index) {
        var el = document.getElementById(`ingredient-${index}`);
        if(el) el.remove();
    }
</script>

<!-- Bootstrap-Select -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.14.0/dist/css/bootstrap-select.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.14.0/dist/js/bootstrap-select.min.js"></script>
